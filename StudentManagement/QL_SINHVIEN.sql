USE MASTER
CREATE DATABASE SINHVIEN
USE SINHVIEN
GO

CREATE TABLE LOP(
MALOP CHAR(10) NOT NULL PRIMARY KEY,
TENLOP NVARCHAR(10),
MAKHOA CHAR(5),
GVCN NVARCHAR(30),
MALT CHAR(10),
)

CREATE TABLE SVIEN(
MSSV CHAR(10) NOT NULL PRIMARY KEY,
HOSV NVARCHAR(10),
TENSV NVARCHAR(20),
PHAI NVARCHAR(5),
NGAYSINH DATETIME,
DIACHI NVARCHAR(50),
DTHOAI CHAR(10),
MALOP CHAR(10),
DIEMTB DECIMAL(4,2),
CONSTRAINT FK_SVIEN_LOP FOREIGN KEY(MALOP) REFERENCES LOP(MALOP))

CREATE TABLE MONHOC(
MAMH CHAR(5) NOT NULL PRIMARY KEY,
TENMH NVARCHAR(20),
TINCHI TINYINT)

CREATE TABLE DIEM(
MSSV CHAR(10),
MAMH CHAR(5),
LANTHI TINYINT,
DIEM DECIMAL(4,2),
CONSTRAINT PK_DIEM PRIMARY KEY (MSSV, MAMH, LANTHI),
CONSTRAINT FK_DIEM_SVIEN FOREIGN KEY(MSSV) REFERENCES SVIEN(MSSV),
CONSTRAINT FK_DIEM_MAMH FOREIGN KEY(MAMH) REFERENCES MONHOC(MAMH))

CREATE TRIGGER trg_Insert_SinhVien
ON SVIEN
INSTEAD OF INSERT
AS
BEGIN
    -- Kiểm tra nếu MSSV để trống
    IF EXISTS (SELECT 1 FROM INSERTED WHERE MSSV IS NULL OR MSSV = '')
    BEGIN
        RAISERROR ('Mã số sinh viên không được để trống.', 16, 1)
        RETURN
    END

    -- Kiểm tra nếu MSSV bị trùng
    IF EXISTS (SELECT 1 FROM SVIEN sv JOIN inserted i ON sv.MSSV = i.MSSV)
    BEGIN
        RAISERROR ('Mã số sinh viên đã tồn tại.', 16, 1)
        RETURN
    END

    -- Kiểm tra nếu MALOP không tồn tại trong bảng LOP
    IF EXISTS (SELECT 1 FROM inserted i WHERE NOT EXISTS (SELECT 1 FROM LOP l WHERE l.MALOP = i.MALOP))
    BEGIN
        RAISERROR ('Mã lớp không tồn tại.', 16, 1)
        RETURN
    END

    -- Nếu không có lỗi, thực hiện chèn dữ liệu vào bảng SVIEN
    INSERT INTO SVIEN (MSSV, HOSV, TENSV, PHAI, NGAYSINH, DIACHI, DTHOAI, MALOP, DIEMTB)
    SELECT MSSV, HOSV, TENSV, PHAI, NGAYSINH, DIACHI, DTHOAI, MALOP, DIEMTB FROM inserted
END



INSERT LOP
VALUES('CDTH12', 'CDTH12', '03', N'NGUYỄN THẾ BẢO', '2033214609')
SET DATEFORMAT DMY
 INSERT INTO SVIEN
 VALUES('2033216613', N'PHAN', N'YÊN', N'NỮ', '29/01/2003', N'HỒ CHÍ MINH ','0379068746','CDTH12', 9.5)
 SELECT *FROM SVIEN INNER JOIN LOP ON LOP.MALOP=SVIEN.MALOP
 --CHẶN XÓA LỚP CÓ SINH VIÊN ĐANG HỌC
CREATE TRIGGER TRG_XOA_LOP
ON LOP
INSTEAD OF DELETE
AS
BEGIN 
 IF EXISTS (SELECT 1 FROM SVIEN WHERE MALOP IN (SELECT MALOP FROM deleted ))
 BEGIN 
 RAISERROR ('KHÔNG THỂ XÓA LỚP CÓ SINH VIÊN ĐANG HỌC!', 16,1);
 RETURN;
 END
 DELETE FROM LOP WHERE MALOP IN (SELECT MALOP FROM deleted);
END
 DELETE FROM LOP
 DELETE FROM SVIEN
 DROP TRIGGER TRG_XOA_LOP

-- 2. KHI THÊM VÀO BẢNG LOP, HAI KÍ TỰ ĐẦU CỦA MÃ LỚP LÀ CD, HAI KÍ TỰ SAU LÀ TH HOẶC KT. 
-- NGƯỢC LẠI KHÔNG CHO THÊM VÀO
CREATE TRIGGER TRG_CHECK_MALOP 
ON LOP
INSTEAD OF INSERT 
AS 
BEGIN 
 IF EXISTS (SELECT 1 
			FROM inserted 
			WHERE MALOP NOT LIKE 'CDTH%' AND MALOP NOT LIKE 'CDKT%')
			BEGIN 
			 RAISERROR ('MÃ LỚP KHÔNG HỢP LỆ!', 16, 1);
			 RETURN;
			END
			INSERT INTO LOP
			SELECT * FROM inserted;
END
-- 3. KHI THÊM VÀO BẢNG KETQUA: KIỂM TRA SỰ TỒN TẠI CỦA MSSV, MAMH, CẬP NHẬT DIEMTB CHO BẢNG SVIEN
CREATE TRIGGER TRG_INSERT_DIEM
ON DIEM
INSTEAD OF INSERT 
AS
BEGIN 
IF EXISTS (SELECT 1 FROM inserted I WHERE I.MSSV NOT IN (SELECT MSSV FROM SVIEN ))
BEGIN
RAISERROR ('MSSV KHÔNG TỒN TẠI', 16,1);
RETURN;
END
IF EXISTS (SELECT 1 FROM inserted I WHERE I.MAMH NOT IN (SELECT MAMH FROM MONHOC))
BEGIN
RAISERROR ('MÃ MÔN HỌC KHÔNG TỒN TẠI', 16, 1);
RETURN;
END
BEGIN 
INSERT INTO DIEM
SELECT * FROM inserted;
UPDATE SVIEN
SET DIEMTB=(SELECT AVG(DIEM) 
			FROM DIEM D 
			WHERE D.MSSV=SVIEN.MSSV)
WHERE MSSV IN (SELECT MSSV FROM inserted)
END
END
--TEST
SELECT * FROM MONHOC
SELECT* FROM DIEM
DELETE MONHOC
DELETE DIEM
DROP TRIGGER TRG_INSERT_DIEM

INSERT INTO DIEM
VALUES ('2033216613', 'CSDL', 1,5)
INSERT INTO DIEM
VALUES 
('2033216613', 'CSDL', 1,5),
('2033216613', 'CSDL', 2,8)

SELECT *FROM SVIEN

INSERT INTO MONHOC
VALUES('CSDL', N'CƠ SỞ DỮ LIỆU', 3)
--------------------------
--4. KHI THÊM VÀO BẢNG MONHOC: TINCHI PHAI >=2 VÀ <=6
CREATE TRG_INSERT_MONHOC
ON MONHOC
INSTEAD OF INSERT
AS
BEGIN


END