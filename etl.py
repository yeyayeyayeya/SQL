import pandas as pd
import pyodbc
from sqlalchemy import create_engine
from config import SQL_SERVER_CONN_STR, POSTGRES_CONN_STR

# 1. Extract t·ª´ SQL Server
def extract():
    conn = pyodbc.connect(SQL_SERVER_CONN_STR)

    dmsv = pd.read_sql("SELECT * FROM DMSV", conn)
    dmmh = pd.read_sql("SELECT * FROM DMMH", conn)
    ketqua = pd.read_sql("SELECT * FROM KETQUA", conn)

    conn.close()

    print("üìå C·ªôt dmmh:", dmmh.columns)
    print("üìå C·ªôt dmsv:", dmsv.columns)
    print("üìå C·ªôt ketqua:", ketqua.columns)

    return dmsv, dmmh, ketqua

# 2. Transform
def transform(dmsv, dmmh, ketqua):
    # Chu·∫©n h√≥a t√™n c·ªôt
    dmsv.columns = [col.strip().lower() for col in dmsv.columns]
    dmmh.columns = [col.strip().lower() for col in dmmh.columns]
    ketqua.columns = [col.strip().lower() for col in ketqua.columns]

    # ƒê·ªïi t√™n ch√≠nh x√°c
    dmsv = dmsv.rename(columns={'masv': 'MaSV', 'hosv': 'HoSV', 'tensv': 'TenSV'})
    dmmh = dmmh.rename(columns={'mamh': 'MaMH', 'tenmh': 'TenMH'})
    ketqua = ketqua.rename(columns={
    'masv': 'MaSV',
    'mamh': 'MaMH',
    'diem': 'Diem',
    'lanthi': 'LanThi'
})


    # Gh√©p h·ªç t√™n sinh vi√™n
    dmsv['HoTen'] = dmsv['HoSV'].str.strip().str.title() + ' ' + dmsv['TenSV'].str.strip().str.title()

    # Ensure Diem column is numeric to avoid errors on empty input
    ketqua['Diem'] = pd.to_numeric(ketqua['Diem'], errors='coerce')
    # T√≠nh GPA
    gpa = ketqua.groupby('MaSV')['Diem'].mean().round(2).reset_index().rename(columns={'Diem': 'GPA'})

    def xeploai(gpa):
        if gpa >= 8: return 'Gi·ªèi'
        elif gpa >= 6.5: return 'Kh√°'
        elif gpa >= 5: return 'Trung B√¨nh'
        else: return 'Y·∫øu'

    gpa['XepLoai'] = gpa['GPA'].apply(xeploai)

    # Merge b·∫£ng t·ªïng h·ª£p
    df = ketqua.merge(dmsv[['MaSV', 'HoTen']], on='MaSV', how='left') \
              .merge(dmmh[['MaMH', 'TenMH']], on='MaMH', how='left') \
              .merge(gpa[['MaSV', 'GPA', 'XepLoai']], on='MaSV', how='left')

    # In ra t√™n c·ªôt sau khi merge ƒë·ªÉ debug
    print("‚úÖ C·ªôt sau khi merge cu·ªëi c√πng:", df.columns.tolist())

    df = df[['MaSV', 'HoTen', 'MaMH', 'TenMH', 'Diem', 'LanThi', 'GPA', 'XepLoai']]
    return df


# 3. Load v√†o PostgreSQL + CSV
import os

def load(df):
    # T·∫°o th∆∞ m·ª•c D:\DB n·∫øu ch∆∞a c√≥
    os.makedirs("D:/DB", exist_ok=True)

    # K·∫øt n·ªëi PostgreSQL
    engine = create_engine(POSTGRES_CONN_STR)
    df.to_sql("bang_tong_hop", engine, if_exists="replace", index=False)

    # Ghi file CSV v√†o D:\DB\output.csv
    df.to_csv("D:/DB/output.csv", index=False)

    print("‚úÖ ƒê√£ n·∫°p v√†o PostgreSQL v√† l∆∞u t·∫°i D:/DB/output.csv")

# 4. Ch·∫°y to√†n b·ªô
if __name__ == "__main__":
    print("üöÄ B·∫Øt ƒë·∫ßu pipeline ELT...")
    dmsv, dmmh, ketqua = extract()
    final_df = transform(dmsv, dmmh, ketqua)
    load(final_df)
    print("üéâ Pipeline ho√†n t·∫•t.")
